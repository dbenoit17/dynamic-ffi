#lang racket/base

(require ffi/unsafe)

(provide (except-out
           (all-defined-out)
           ffi-obj-map))

(define ~a ~a)

(define ~a-headers ~a)

(define ((warn-undefined-symbol sym))
  (eprintf "warning: ~a does not contain symbol ~~a\n" sym))

(define ffi-obj-map
 ~a)

(define ~a 
  (case-lambda
    [() ffi-obj-map]
    [(sym)
     (let ([obj (hash-ref ffi-obj-map sym)])
       (if (procedure? obj) (obj) obj))]
    [(sym . args)
     (let ([obj (hash-ref ffi-obj-map sym)])
       (apply obj args))]))

